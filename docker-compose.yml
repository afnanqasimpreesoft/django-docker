version: "3.9"

services:
  postgres:
    image: postgres:15
    env_file: .env
    restart: unless-stopped
    volumes:
      - "postgres-data:/var/lib/postgresql/data/"

  django:
    build: .
    image: django-docker
    env_file: .env
    restart: unless-stopped
    volumes:
      - "staticfiles-data:/var/www/static"
      - "media-data:/var/www/media"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`47.242.195.2`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.routers.django.priority=1"

  nginx:
    image: nginx:1.23-alpine
    restart: unless-stopped
    volumes:
      - type: volume
        source: media-data
        target: /usr/share/nginx/html/media
        read_only: true
      - type: volume
        source: staticfiles-data
        target: /usr/share/nginx/html/static
        read_only: true
    depends_on:
      - django
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.staticfiles.rule=PathPrefix(`/static/`) || PathPrefix(`/media/`)"
      - "traefik.http.routers.staticfiles.entrypoints=web"
      - "traefik.http.routers.staticfiles.priority=2"

  traefik:
    image: traefik:v2.9
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"  # Use port 8080
    ports:
      - "8080:80"  # Map host's port 8080 to container's port 80
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  postgres-data:
  staticfiles-data:
  media-data:
